{"mappings":"AACA,IAAIA,UAAY,CAACC,EAAWC,EAAaC,IAC9BC,KAAKC,IAAID,KAAKE,IAAIL,EAAGE,GAAOD,GAInCK,IAAM,CACNN,EACAO,EACAC,EACAC,EACAC,EACAC,KAEA,MAAMC,GAAUZ,EAAIO,IAAWC,EAAQD,IAAWG,EAAQD,GAAUA,EACpE,OAAKE,EAGDF,EAASC,EACFX,UAAUa,EAAQH,EAAQC,GAE1BX,UAAUa,EAAQF,EAAOD,GALzBG,GASXC,OAAS,KACT,IAAIC,EAASC,OAAOC,QAChBC,EAAId,KAAKe,IAAIJ,EAAU,IAAO,KAAO,IACrCK,EAAKhB,KAAKe,IAAIf,KAAKiB,MAAMd,IAAIW,EAAG,EAAG,IAAK,EAAE,KAClBI,SAASC,cAAc,qBAE5CC,MAAMC,mBAAqB,IAAS,IAALL,OAG1CJ,OAAOU,iBAAiB,SAAUZ","sources":["src/components/animations/spritescss/spritescss.ts"],"sourcesContent":["// from p5.js\nlet constrain = (n: number, low: number, high: number): number => {\n    return Math.max(Math.min(n, high), low);\n};\n\ntype n = number;\nlet map = (\n    n: number,\n    start1: number,\n    stop1: number,\n    start2: number,\n    stop2: number,\n    withinBounds?: number\n): number => {\n    const newval = (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\n    if (!withinBounds) {\n        return newval;\n    }\n    if (start2 < stop2) {\n        return constrain(newval, start2, stop2);\n    } else {\n        return constrain(newval, stop2, start2);\n    }\n};\n\nlet normal = (): void => {\n    let scroll = window.scrollY;\n    let s = Math.abs((scroll % 200) - 100) - 100;\n    let s2 = Math.abs(Math.floor(map(s, 0, 100, 0,8)));\n    const docEle: HTMLElement = document.querySelector('#sprite-container');\n\n    docEle.style.backgroundPosition = `-${s2 * 400}px`;\n}\n// add an event listener to the window to call the function on scroll\nwindow.addEventListener(\"scroll\", normal)"],"names":["constrain","n","low","high","Math","max","min","map","start1","stop1","start2","stop2","withinBounds","newval","normal","scroll","window","scrollY","s","abs","s2","floor","document","querySelector","style","backgroundPosition","addEventListener"],"version":3,"file":"index.e244bc38.js.map"}